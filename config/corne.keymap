/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>

// Mouse keys
/*
#include <dt-bindings/zmk/pointing.h>
#define ZMK_POINTING_DEFAULT_MOVE_VAL 700  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10
*/

#define XXX &none
#define ___ &trans

// Layers
#define BASE \
0
#define NAV \
1
#define NUM \
2
#define SYM \
3
#define SYMC \
4
#define MACR \
5
#define META \
6
#define FKEY \
7


/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

// Source key-labels.
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/key-labels/42.h"
#define KEYS_L LT5 LT4 LT3 LT2 LT1 LT0 LM5 LM4 LM3 LM2 LM1 LM0 LB5 LB4 LB3 LB2 LB1 LB0
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define KEYS_R_SANS_BS RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

/* Homerow mods */
#include "zmk-helpers/helper.h"
/*
#define QUICK_TAP_MS 175
#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)							\
	ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";	\
		tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;			\
		require-prior-idle-ms = <150>; hold-trigger-on-release;			\
		hold-trigger-key-positions = <TRIGGER_POS>;)

// Left hand HRMs.
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)
// Right hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)
*/
// Generic <unshifted>, <shifted>
#define MOD_MORPH_GENERIC(_name_, _unshifted_, _shifted_)	\
_name_: _name_##mod_morph_generic_shift {					\
	compatible = "zmk,behavior-mod-morph";					\
	#binding-cells = <0>;									\
	bindings = <_unshifted_>, <_shifted_>;					\
	mods = <(MOD_LSFT|MOD_RSFT)>;							\
};
// Generic HML macros
#define HML_GENERIC(_name_, _binding_)						\
hml_##_name_: home_row_mod_left_##_name_ {					\
	compatible = "zmk,behavior-hold-tap";					\
	#binding-cells = <2>;									\
	flavor = "balanced";									\
	require-prior-idle-ms = <150>;							\
	tapping-term-ms = <280>;								\
	quick-tap-ms = <175>;									\
	bindings = <&kp>, <_binding_>;							\
	hold-trigger-key-positions = <KEYS_R THUMBS>; /* RHS */	\
	hold-trigger-on-release;								\
};
#define HMR_GENERIC(_name_, _binding_)	\
hmr_##_name_: home_row_mod_right_##_name_ {					\
	compatible = "zmk,behavior-hold-tap";					\
	#binding-cells = <2>;									\
	flavor = "balanced";									\
	require-prior-idle-ms = <150>;							\
	tapping-term-ms = <280>;								\
	quick-tap-ms = <175>;									\
	bindings = <&kp>, <_binding_>;							\
	hold-trigger-key-positions = <KEYS_L THUMBS>; /* LHS */	\
	hold-trigger-on-release;								\
};
// Non-macro setup
/ {
	behaviors {
		// Home row mods
		hml: home_row_mod_left {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			require-prior-idle-ms = <150>;
			tapping-term-ms = <280>;
			quick-tap-ms = <175>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <KEYS_R_SANS_BS THUMBS>; // List of keys on the right side of the keyboard
			hold-trigger-on-release;
		};
		hmr: home_row_mod_right {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "balanced";
			require-prior-idle-ms = <150>;
			tapping-term-ms = <280>;
			quick-tap-ms = <175>;
			bindings = <&kp>, <&kp>;
			hold-trigger-key-positions = <KEYS_L THUMBS>; // List of keys on the left side of the keyboard
			hold-trigger-on-release;
		};

		// Mod morphs
		// , / ;
		MOD_MORPH_GENERIC(c_scln, &kp COMMA, &kp SEMI)
		// . / :
		MOD_MORPH_GENERIC(dot_cln, &kp DOT, &kp COLON)
		// ! / ?
		MOD_MORPH_GENERIC(bqm, &kp EXCL, &kp QMARK)
		// Space / Underscore
		MOD_MORPH_GENERIC(spund, &kp SPACE, &kp UNDER)

		// Numbers / F keys row
		MOD_MORPH_GENERIC(mm_transF1, &trans, &kp F1)
		//MOD_MORPH_GENERIC(mm_transF1, &kp TAB, &kp F1)
		MOD_MORPH_GENERIC(mm_N1F2,	&kp N1, &kp F2)
		MOD_MORPH_GENERIC(mm_N2F3,	&kp N2, &kp F3)
		MOD_MORPH_GENERIC(mm_N3F4,	&kp N3, &kp F4)
		MOD_MORPH_GENERIC(mm_N4F5,	&kp N4, &kp F5)
		MOD_MORPH_GENERIC(mm_N5F6,	&kp N5, &kp F6)
		MOD_MORPH_GENERIC(mm_N6F7,	&kp N6, &kp F7)
		MOD_MORPH_GENERIC(mm_N7F8,	&kp N7, &kp F8)
		MOD_MORPH_GENERIC(mm_N8F9,	&kp N8, &kp F9)
		MOD_MORPH_GENERIC(mm_N9F10,	&kp N9, &kp F10)
		MOD_MORPH_GENERIC(mm_N0F11,	&kp N0, &kp F11)
		MOD_MORPH_GENERIC(mm_transF12, &trans, &kp F12)
		//MOD_MORPH_GENERIC(mm_transF12, &kp BSPC, &kp F12)

		// Mod morph for nullptr / NULL macros
		MOD_MORPH_GENERIC(np, &null_pointer, &null_capitals)

		// Hold tap for smart_shift
		ss: smart_shift {
			compatible = "zmk,behavior-hold-tap";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&kp>, <&caps_word>;
			display-name = "SmartShift";
		};

		// Momentary / sticky layer
        mo_sl: momentary_sticky_layer {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sl>;
        };
    };
};

// Macros
#define MACRO(_name_, _bindings_)			\
_name_: macro_##_name_ {					\
	compatible		= "zmk,behavior-macro";	\
	#binding-cells	= <0>;					\
	tap-ms			= <1>;					\
	wait-ms			= <1>;					\
	bindings		= <_bindings_>;			\
};

/ {
	macros {
		// <-
		MACRO(larr, &kp LT &kp MINUS)
		// <=
		MACRO(learr, &kp LT &kp EQUAL)
		// ->
		MACRO(rarr, &kp MINUS &kp GT)
		// =>
		MACRO(rearr, &kp EQUAL &kp GT)
		// nullptr
		MACRO(
			null_pointer,
			&kp N
			&kp U
			&kp L
			&kp L
			&kp P
			&kp T
			&kp R
		)
		// NULL
		MACRO(null_capitals,
			&kp LS(N)
			&kp LS(U)
			&kp LS(L)
			&kp LS(L)
		)
		// Append =
		aeq: append_equals_macro {
			compatible = "zmk,behavior-macro-one-param";
			#binding-cells = <1>; // Must be 1
			wait-ms = <1>;
			tap-ms = <1>;
			bindings = <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER>, <&kp EQUAL>;
		};
		// c style comments
		// /*
		lcomm: left_comment {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp FSLH &kp STAR>;
		};
		// */
		rcomm: right_comment {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp STAR &kp FSLH>;
		};
		// ??=
		ncoper: null_coalescing_oper {
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings = <&kp QMARK &kp QMARK &kp EQUAL>;
		};
	};
};

// Caps word
&caps_word {
	continue-list = <UNDERSCORE MINUS>;
};

&sl {
	release-after-ms = <2000>;
};

/ {
	conditional_layers {
		compatible = "zmk,conditional-layers";
		goto_meta {
			if-layers = <NAV SYM NUM MACR>;
			then-layer = <META>;
		};
		fkeys {
			if-layers = <NAV MACR>;
			then-layer = <FKEY>;
		}
		SYMC {
			if-layers = <NUM SYM>;
			then-layer = <SYMC>;
		}
	};
};

// Define HRM order
/*
// SCGA
// Left
#define HRM_L1 LSHFT
#define HRM_L2 LCTRL
#define HRM_L3 LGUI
#define HRM_L4 LALT
// Right
#define HRM_R1 RALT
#define HRM_R2 RGUI
#define HRM_R3 RCTRL
#define HRM_R4 RSHFT
*/
// GASC
// Left
#define HRM_L1 \
LGUI
#define HRM_L2 \
LCTRL
#define HRM_L3 \
LSHFT
#define HRM_L4 \
LALT
// Right
#define HRM_R1 \
RALT
#define HRM_R2 \
RSHFT
#define HRM_R3 \
RCTRL
#define HRM_R4 \
RGUI


// Implement HRM order
// Left
#define HRM_L(_one_, _two_, _three_, _four_)	\
	&hml HRM_L1 _one_							\
	&hml HRM_L2 _two_							\
	&hml HRM_L3 _three_							\
	&hml HRM_L4 _four_
// Right
#define HRM_R(_one_, _two_, _three_, _four_)	\
	&hmr HRM_R1 _one_							\
	&hmr HRM_R2 _two_							\
	&hmr HRM_R3 _three_							\
	&hmr HRM_R4 _four_


/ {
	keymap {
		compatible = "zmk,keymap";
		base_layer {
			display-name = "Base";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	&kp TAB			&kp Q			&kp W			&kp F			&kp P			&kp B				&kp J			&kp L			&kp U			&kp Y			&kp SQT			&kp BSPC
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	&mo NAV			HRM_L(A,		R,				S,				T)				&kp G				&kp M			HRM_R(N,		E,				I,				O)				&mo MACR
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	&ss LSHFT 0		&kp Z			&kp X			&kp C			&kp D			&kp V				&kp K			&kp H			&c_scln			&dot_cln		&bqm			&ss RSHFT 0
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													&kp ESC			&mo NUM			&kp RET				&spund			&mo SYM			&key_repeat
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};

		navLayer {
			display-name = "Nav";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				___				&kp LG(LC(LEFT)) &kp LG(TAB)	&kp LG(LC(RIGHT)) ___				___				&kp PGUP		&kp UP			&kp PGDN		___				&kp DEL
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				&kp HRM_L1		&kp HRM_L2		&kp HRM_L3		&kp HRM_L4		___					&kp HOME		&kp LEFT		&kp DOWN		&kp RIGHT		&kp END			___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				&kp C_MUTE		&kp C_VOL_DN	&kp C_VOL_UP	&kp C_PP		___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				&kp ESC				&kp UNDER		___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};

		numBracket {
			display-name = "(Num)";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				&kp N1			&kp N2			&kp N3			&kp N4			&kp N5				&kp N6			&kp N7			&kp N8			&kp N9			&kp N0			___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				HRM_L(LT,		LBKT,			LBRC,			RS(N9))			&kp BSLH			&kp FSLH		HRM_R(LS(N0),	RBRC,			RBKT,			GT)				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				&aeq LT			___				___				___				&lcomm				&rcomm			___				___				&aeq GT			___				___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				___					___				___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯

			>;
		};

		symbols {
			display-name = "Sym";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				&kp QMARK		XXX				XXX				&kp PLUS		&kp EXCL			XXX				XXX				&kp UNDER		XXX				XXX				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				HRM_L(AMPS,		SPACE,			STAR,			TILDE)			&kp GRAVE			&kp MINUS		HRM_R(SPACE,	EQUAL,			PIPE,			AT)				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				XXX				XXX				&kp CARET		&kp DOLLAR		XXX					XXX				&kp HASH		&larr			&rarr			&kp PRCNT		___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				___					___				___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};

		equalsAppendedSymbols {
			display-name = "Sym^";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				&ncoper			___				___				&aeq PLUS		&aeq EXCL			___				___				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				&aeq AMPS		___				&aeq STAR		&aeq TILDE		___					&aeq MINUS		___				___				&aeq PIPE		___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				&aeq CARET		&aeq DOLLAR		___					___				&aeq HASH		&learr			&rearr			&aeq PRCNT		___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				___					___				___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};

		Macro {
			display-name = "Macro";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				___				&kt W			___				___				___					___				___				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				&sk HRM_L1		&sk HRM_L2		&sk HRM_L3		&sk HRM_L4		___					___				&np				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				___				___				___				___				___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				___					___				___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};

		meta {
			display-name = "Meta";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				___				___				___				___				&bt BT_CLR			&bt BT_CLR		___				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				___				___				___				___				___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													&sys_reset		___				&bootloader			&bootloader		___				&sys_reset
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};

		FKeys {
			display-name = "F#";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	&kp F1			&kp F2			&kp F3			&kp F4			&kp F5			&kp F6				&kp F7			&kp F8			&kp F9			&kp F10			&kp F11			&kp F12
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				___				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				___				___				___				___				___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				___					___				___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
		};
	};
};


/*
		layerName {
			display-name = "layerName";
			bindings = <
//╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮   ╭───────────────┬───────────────┬───────────────┬───────────────┬───────────────┬───────────────╮
	___				___				___				___				___				___					___				___				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				___				___				___				___				___
//├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┼───────────────┼───────────────┤
	___				___				___				___				___				___					___				___				___				___				___				___
//╰───────────────┴───────────────┴───────────────┼───────────────┼───────────────┼───────────────┤   ├───────────────┼───────────────┼───────────────┼───────────────┴───────────────┴───────────────╯
													___				___				___					___				___				___
//                                                ╰───────────────┴───────────────┴───────────────╯   ╰───────────────┴───────────────┴───────────────╯
			>;
*/