/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
	ZMK_BEHAVIOR(NAME, hold_tap, \
		flavor = "balanced"; \
		tapping-term-ms = <280>; \
		quick-tap-ms = <QUICK_TAP_MS>; \
		require-prior-idle-ms = <150>; \
		bindings = <HOLD>, <TAP>; \
		hold-trigger-key-positions = <TRIGGER_POS>; \
		hold-trigger-on-release; \
	)
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo
MAKE_HRM(hmr_lpar_lt, &kp, &lpar_lt, KEYS_R THUMBS)    // "    "   "   "
MAKE_HRM(hmr_rpar_gt, &kp, &rpar_gt, KEYS_R THUMBS)    // "    "   "   "


// copy all macro -- not working
ZMK_BEHAVIOR(copy_all, macro,
	wait-ms = <15>;
	tap-ms = <15>;
	bindings = <&kp LG(A)>, <&kp LG(C)>;
)

ZMK_BEHAVIOR(copy_all_td, tap_dance,
	tapping-term-ms = <200>;
	bindings = <&kp LG(A)>, <&copy_all>;
)
MAKE_HRM(hml_copy_all, &kp, &copy_all_td, KEYS_R THUMBS)  // "    "   "   "


/ {
		keymap {
				compatible = "zmk,keymap";

				default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
						display-name = "Base";
						bindings = <
   &kp TAB		&kpQ		&kp W		&kp F			&kp P			&kp B		&kp J		&kp L			&kp U			&kp Y		&kp SEMI	&kp BSPC
   &kp LCTRL	&hml LGUI A	&hml LALT R	&hml LSHFT S	&hml LCTRL T	&kp G		&kp M		&hmr LCTRL N	&hmr RSHFT E	&hmr LALT I	&hmr LGUI O	&kp SQT
   &kp LSHFT	&kp Z		&kp X		&kp C			&kp D			&kp V		&kp K		&kp H			&kp COMMA		&kp DOT		&kp FSLH	&kp ESC
										&kp RALT		&mo 2			&kp RET		&kp SPACE	&mo 1	&kp LGUI
						>;
				};
				lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
						display-name = "Raise";
						bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
						  			&kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
						>;
				};

				raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
						display-name = "Lower";
						bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
							 &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
						>;
				};

				extra_1 {
						status = "reserved";
				};

				extra_2 {
						status = "reserved";
				};

				extra_3 {
						status = "reserved";
				};
		};
};
